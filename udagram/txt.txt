### .env


 POSTGRES_HOST  = "localhost"
 POSTGRES_USERNAME  = "postgres"
 POSTGRES_DB  = "iudagram"
 POSTGRES_PASSWORD  = "123456"
 DB_PORT  = 5432
 PORT  = 3000
 AWS_REGION  = ""  
 AWS_PROFILE  = "default"  
 AWS_BUCKET  = ""  
 URL  = "http://localhost"
 JWT_SECRET  = "oneworldlancer"


 	db_port:  process.env.DB_PORT ,


	 ###POSTGRES_HOST  = "iudagram.cd5ypuobflkf.us-east-1.rds.amazonaws.com"



	     "start": "node ./www/server.js",
    "tsc": "npx tsc",
    "dev": "npx ts-node-dev --respawn --transpile-only ./src/server.ts",
    "prod": "npx tsc && node ./www/server.js",
    "clean": "rm -rf www/ || true",
    "deploy": "npm run build && eb list && eb use udagram-api-dev && eb deploy",
    "deploy2": "eb list && eb use udagram-api-dev && eb deploy",
    "build": "npm install . && npm run clean && tsc && cp -rf src/config www/config && cp -R .elasticbeanstalk www/.elasticbeanstalk && cp .npmrc www/.npmrc && cp package.json www/package.json && cd www && zip -r Archive.zip . && cd ..",
    "buildx": "npm install . && npm run clean && tsc && cp -rf src/config www/config && cp -R .elasticbeanstalk www/.elasticbeanstalk && cp .npmrc www/.npmrc && cp package.json www/package.json && cd www && bestzip Archive.zip . && cd ..",
    "test": "echo \"Error: no test specified\" && exit 1"