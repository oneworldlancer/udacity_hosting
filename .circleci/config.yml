version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections

# Define the jobs we want to run for this project
jobs:
  build:
    docker:
      - image: "cimg/node:14.15"        
    steps:
      - node/install:
          node-version: '14.15'  
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
      # TODO: Install dependencies in the the backend API
      - run:
          name: Install Back-End Dependencies
          command: |
            echo "TODO: Install dependencies in the the backend API "
            npm run api:install
      # TODO: TODO: Build the frontend app
      - run:
          name: Front-End Build
          command: |
            echo "TODO: Build the frontend app"
            npm run frontend:build
      # TODO: TODO: Build the Back-End app
      - run:
          name: Back-End Build
          command: |
            echo "TODO: Build the backend API"
            npm run api:build
            
  test:
    docker:
      - image: "cimg/base:stable"
    steps:
      - checkout
      - run:
          name: Test FrontEnd
          # TODO: Install, build, deploy in both apps
          command: |
            echo "# TODO: Testing FrontEnd"
  deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install:
          node-version: '14.15' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: Envs
          # TODO: Install, build, deploy in both apps
          command: |
            echo "# TODO: Install, build, deploy in both apps"
            eb init udagram-api-dev --platform node.js --region us-east-1
            echo "# use EB"
            eb use udagram-api-dev
            echo "# Deploy"
            npm run deploy
            echo "# EB setenvs"
            eb setenv POSTGRES_HOST=$POSTGRES_HOST DB_PORT=$DB_PORT POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_USERNAME=$POSTGRES_USERNAME POSTGRES_DB=$POSTGRES_DB JWT_SECRET=$JWT_SECRET PORT=$PORT

# Orchestrate our job run sequence
workflows:
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - hold:
          type: approval
          requires:
            - build
            - test
      - deploy:
          requires:
            - hold
